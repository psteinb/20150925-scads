#!/bin/sh
#BSUB -J spark_pythonbootstrap
#BSUB -W 00:40 
#BSUB -oo spark_pythonbootstrap_%J_${LSB_DJOB_NUMPROC}.log

if [[ -z $SPARK_HOME ]];then
export SPARK_HOME=$HOME/software/spark/1.5.0
fi

# initialize the nodes
python /home/steinbac/development/scads_snakemake_vs_spark/spark/setup/start_spark_lsf.py -m 4G -s /scratch/users/$USER

# creates the slaves file, starts the spark master and worker processes using mpirun
# the "-c" option specifies number of cores per worker
# -m specifies SPARK_MEMORY

# the specific example runs spark's pi estimation with a slices = 100 (first and only argument)
CWD=/projects/hpcsupport/steinbac/scads/spark/gpu_${LSB_DJOB_NUMPROC}_jobs

set +x
$SPARK_HOME/bin/spark-submit --master spark://$HOSTNAME:7077 --total-executor-cores ${LSB_DJOB_NUMPROC} ${CWD}/drive_bootstrap.py ${CWD} "rotate_only"
set -x

SPARK_SLAVES=/scratch/users/$USER/slaves_$LSB_JOBID
$SPARK_HOME/sbin/stop-all.sh
$SPARK_HOME/sbin/stop-slaves.sh
echo "cleanup slaves file $SPARK_SLAVES"
rm -v $SPARK_SLAVES
